{"version":3,"sources":["component/Context.js","component/Search.js","component/Tags.js","component/Collapse.js","component/List.js","component/App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Search","SearchBy","setSearchType","SearchByName","SearchByTag","props","handleChange","bind","e","this","context","target","value","toLowerCase","onChange","Component","contextType","className","type","id","placeholder","NameSearch","TagSearch","Tags","useState","tags","setTags","input","setInput","useContext","useEffect","students","studentTags","filter","student","length","handleDelete","tagToDelete","newTags","tag","map","index","Tag","key","content","onDelete","trim","onKeyUp","isNotRepeat","includes","onClick","Collapse","icon","displayClass","display","toggleDisplay","grades","newDisplay","reduce","a","b","toFixed","grade","List","setStudents","fetchData","fetch","process","res","json","data","studentsWithTags","newStudents","forEach","studentTag","Object","assign","studentName","filteredStudents","checkName","firstName","lastName","checkTag","join","pic","email","company","skill","fullName","src","alt","title","Provider","App","setName","setTag","setStudentTags","setSearchName","tagComing","isExisted","some","newStudentTags","setSearchTag","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.adf5e9a7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React from 'react';\r\n\r\nimport Context from './Context';\r\n\r\n// Some Hooks are not working well in HOC\r\nfunction Search(SearchBy) {\r\n    let setSearchType;\r\n    switch (SearchBy) {\r\n        case SearchByName:\r\n            setSearchType = 'setSearchName';\r\n            break;\r\n        case SearchByTag:\r\n            setSearchType = 'setSearchTag';\r\n            break;\r\n    }\r\n\r\n    return class Search extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.handleChange = this.handleChange.bind(this);\r\n        }\r\n\r\n        static contextType = Context;\r\n\r\n        handleChange(e) {\r\n            this.context[setSearchType](e.target.value.toLowerCase());\r\n        }\r\n\r\n        render() {\r\n            return <SearchBy onChange={this.handleChange} />;\r\n        }\r\n    }\r\n}\r\n\r\nfunction SearchByName(props) {\r\n    return (\r\n        <div className=\"input-wrapper\">\r\n            <input type=\"search\" id=\"name-input\" placeholder=\"Search by name\" className=\"input\"\r\n                onChange={props.onChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SearchByTag(props) {\r\n    return (\r\n        <div className=\"input-wrapper\">\r\n            <input type=\"search\" id=\"tag-input\" placeholder=\"Search by tags\" className=\"input\"\r\n                onChange={props.onChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const NameSearch = Search(SearchByName);\r\nexport const TagSearch = Search(SearchByTag);","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport Context from './Context';\r\n\r\nexport default function Tags(props) {\r\n  const [tags, setTags] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const context = useContext(Context);\r\n\r\n  const { id } = props;\r\n\r\n  useEffect(() => {\r\n    const students = context.studentTags.filter(student => student.id === id);\r\n    const studentTags = students.length ? students[0].tags : [];\r\n    setTags(studentTags);\r\n  }, []);\r\n\r\n  useEffect(() => { context.setTags({ id, tags }) }, [tags]);\r\n\r\n  const handleDelete = tagToDelete => {\r\n    const newTags = tags.filter(tag => tag !== tagToDelete);\r\n    setTags(newTags);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value.trim());\r\n  };\r\n\r\n  // Only add non-repeat and non-empty tags\r\n  const handleKeyUp = e => {\r\n    const isNotRepeat = !tags.includes(input);\r\n    if (e.key === 'Enter' && input && isNotRepeat) {\r\n      setTags([...tags, input]);\r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-wrapper\">\r\n      <ul className=\"tags\">\r\n        {tags.map((tag, index) =>\r\n          <Tag key={`${id}-${index + 1}`} content={tag}\r\n            onDelete={handleDelete} />\r\n        )}\r\n      </ul>\r\n      <input type=\"search\" id=\"add-tag-input\" placeholder=\"Add a tag\" value={input} className=\"input add-tag-input\"\r\n        onChange={handleChange}\r\n        onKeyUp={handleKeyUp} />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Tag(props) {\r\n  const handleClick = () => props.onDelete(props.content);\r\n  return (\r\n    <li className=\"tag\">\r\n      {props.content}\r\n      <span className=\"icon-delete-tag\" onClick={handleClick}>Ã—</span>\r\n    </li>\r\n  );\r\n}","import React, { useState } from 'react';\r\n\r\nimport Tags from './Tags';\r\n\r\nexport default function Collapse(props) {\r\n  const [display, toggleDisplay] = useState({ icon: '+', displayClass: ' d-none' });\r\n\r\n  // Toggle collapse and switch\r\n  const handleClick = () => {\r\n    const newDisplay =\r\n      display.icon === '+' ?\r\n        { icon: '-', displayClass: '' } :\r\n        { icon: '+', displayClass: ' d-none' }\r\n    toggleDisplay(newDisplay);\r\n  }\r\n\r\n  const { grades, id } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"expand-btn\" onClick={handleClick}>{display.icon}</div>\r\n      <div>\r\n        {`Average: ${(grades.reduce((a, b) => +a + +b) / grades.length).toFixed(3)}%`}\r\n      </div>\r\n      <div className={`grades-wrapper${display.displayClass}`}>\r\n        <ul>{grades.map((grade, index) => {\r\n          return (\r\n            <li key={`${id}-${index}`}>\r\n              {`Test ${index}: `}\r\n              <span className=\"txt-grade\">{grade}%</span>\r\n            </li>\r\n          )\r\n        })}</ul>\r\n        <Tags id={id} />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport Context from './Context';\r\nimport Collapse from './Collapse';\r\n\r\nexport default function List(props) {\r\n  const [students, setStudents] = useState([]);\r\n  const context = useContext(Context);\r\n\r\n  const fetchData = async () => {\r\n    const res = await fetch(process.env.REACT_APP_URL);\r\n    const data = await res.json();\r\n    const { students } = data;\r\n    const studentsWithTags = students.map(student => {\r\n      student.tags = [];\r\n      return student;\r\n    });\r\n    setStudents(studentsWithTags);\r\n  };\r\n\r\n  useEffect(() => { fetchData() }, []);\r\n\r\n  useEffect(() => {\r\n    const newStudents = students;\r\n    const { studentTags } = props;\r\n    studentTags.forEach(studentTag => {\r\n      const index = studentTag.id - 1;\r\n      Object.assign(newStudents[index], studentTag);\r\n    });\r\n    setStudents(newStudents);\r\n  }, [students, props])\r\n\r\n  // Only name-input/tag-input: search by name/tag\r\n  // Both input: search and show both\r\n  const { studentName, studentTag } = context;\r\n  const filteredStudents = students.filter(student => {\r\n    const checkName = (`${student.firstName} ${student.lastName}`).toLowerCase().includes(studentName);\r\n    const checkTag = student.tags.join('*-/+-/*--').includes(studentTag);\r\n    return (\r\n      !studentName ?\r\n        checkTag :\r\n        studentTag ?\r\n          checkName || checkTag :\r\n          checkName\r\n    )\r\n  });\r\n  return (\r\n    <ul className=\"list\" > {\r\n      filteredStudents.length ?\r\n        filteredStudents.map(student => {\r\n          const { id, pic, firstName, lastName, email, company, skill, grades } = student;\r\n          const fullName = `${firstName} ${lastName}`;\r\n          return (\r\n            <li key={id} className=\"list-item\">\r\n              <div className=\"image-wrapper\">\r\n                <img src={pic} alt={fullName} title={fullName} className=\"image\" />\r\n              </div>\r\n              <div className=\"content-wrapper\">\r\n                <div className=\"txt-name\">{fullName}</div>\r\n                <div className=\"txt-content\">\r\n                  <div>{`Email: ${email}`}</div>\r\n                  <div>{`Company: ${company}`}</div>\r\n                  <div>{`Skill: ${skill}`}</div>\r\n                  <Collapse grades={grades} id={id} />\r\n                </div>\r\n              </div>\r\n            </li>\r\n          )\r\n        }) :\r\n        <li className=\"list-item-empty\">No result found</li>\r\n    }\r\n    </ul>\r\n  )\r\n}","import React, { useState } from 'react';\n\nimport Context from './Context';\nimport { NameSearch, TagSearch } from './Search';\nimport List from './List';\nimport './App.css';\n\nconst { Provider } = Context;\n\nexport default function App() {\n  const [studentName, setName] = useState('');\n  const [studentTag, setTag] = useState('');\n  const [studentTags, setStudentTags] = useState([]);\n\n  const setSearchName = studentName => setName(studentName);\n\n  // !tagComing.length ? delete it : ID existed ? merge it : add it\n  const setTags = tagComing => {\n    const isExisted = studentTags.some(student => student.id === tagComing.id);\n    const isEmptyComing = !tagComing.tags.length;\n    const newStudentTags =\n      isEmptyComing ?\n        studentTags.filter(student => student.id !== tagComing.id) :\n        isExisted ?\n          studentTags.map(student =>\n            student.id === tagComing.id ?\n              { ...student, tags: tagComing.tags } :\n              student\n          ) :\n          [...studentTags, tagComing];\n    setStudentTags(newStudentTags);\n  }\n\n  const setSearchTag = studentTag => setTag(studentTag);\n\n  return (\n    <div className=\"container\">\n      <Provider\n        value={{\n          studentName,\n          studentTags,\n          studentTag,\n          setSearchName,\n          setTags,\n          setSearchTag\n        }}>\n        <NameSearch />\n        <TagSearch />\n        <List studentTags={studentTags} />\n      </Provider>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}